stages:         
  - test
  - build
  - deploy

variables:
 REGISTRY_HOSTNAME: gcr.io/pintu-sre
 PROJECT_NAME: pintu-sre
 CLUSTER_NAME: k8s-pintu

test-nodejs:
  image: node:14-alpine
  stage: test
  before_script:
   - cd nodejs
  script:
   - npm ci 
   - npm test 

test-golang:
  image: golang:1.18
  stage: test
  before_script:
   - cd golang
  script:
   - go mod download 
   - go test 
   
build-nodejs:
  image: docker:latest         
  stage: build
  services:
    - docker:dind
  before_script:
   - docker info
   - echo "$SERVICE_ACCOUNT_KEY" > service-account.json
   - docker login -u _json_key --password-stdin https://gcr.io < service-account.json
  script:
   - docker build --tag $REGISTRY_HOSTNAME/nodejs-tasksapp:$CI_COMMIT_SHORT_SHA ./nodejs
   - docker push $REGISTRY_HOSTNAME/nodejs-tasksapp:$CI_COMMIT_SHORT_SHA

build-golang:
  image: docker:latest         
  stage: build
  services:
    - docker:dind
  before_script:
   - docker info
   - echo "$SERVICE_ACCOUNT_KEY" > service-account.json
   - docker login -u _json_key --password-stdin https://gcr.io < service-account.json
  script:
   - docker build --tag $REGISTRY_HOSTNAME/golang-tasksapp:$CI_COMMIT_SHORT_SHA ./golang
   - docker push $REGISTRY_HOSTNAME/golang-tasksapp:$CI_COMMIT_SHORT_SHA

deploy:
 stage: deploy
 image: google/cloud-sdk
 script:
   - echo "$SERVICE_ACCOUNT_KEY" > key.json
   - gcloud auth activate-service-account --key-file=key.json
   - gcloud config set project $PROJECT_NAME
   - gcloud config set container/cluster $CLUSTER_NAME
   - gcloud config set compute/zone asia-south1-c
   - gcloud container clusters get-credentials $CLUSTER_NAME --zone asia-south1-c --project $PROJECT_NAME
   - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ./k8s-manifest/nodejs/deployment.yaml
   - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ./k8s-manifest/golang/deployment.yaml
   - kubectl apply -f ./k8s-manifest/nodejs/deployment.yaml
   - kubectl apply -f ./k8s-manifest/golang/deployment.yaml